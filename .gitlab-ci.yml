stages:
  - build
  - test
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

build_operator:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'v2'
  stage: build
  # https://github.com/containerd/containerd/issues/5978
  retry: 1
  script:
    - TAG=${CI_COMMIT_TAG:-v2-dev-$CI_COMMIT_SHORT_SHA}
    - export "PATH=$PWD/bin:$PATH"
    - if [ -n "$CI_COMMIT_TAG" ]; then NOCACHE=true ; else NOCACHE=false ; fi
    - ln -snf $DOCKER_AUTH_CONFIG_FILE $HOME/.docker/config.json
    - docker buildx build --pull --push --platform $PUBLISH_PLATFORMS --build-arg=VERSION=$TAG-$CI_COMMIT_SHA -t $LINBIT_DOCKER_REGISTRY/linstor-operator-test/linstor-operator:$TAG . --no-cache=$NOCACHE
    - echo "OPERATOR_IMAGE=$LINBIT_DOCKER_REGISTRY/linstor-operator-test/linstor-operator:$TAG" > .build.env
  artifacts:
    reports:
      dotenv:
        - .build.env
  tags:
    - multiarch

container_scanning:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'v2'
    - if: $CI_COMMIT_TAG
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy --version
    - trivy image --exit-code 0 --format template --template "@/contrib/html.tpl" -o container-scan.html "$OPERATOR_IMAGE"
    # Prints full report
    - trivy image --exit-code 0 "$OPERATOR_IMAGE"
    # Fail on critical (unfixed) vulnerabilities
    - trivy image --exit-code 1 --ignore-unfixed --severity CRITICAL "$OPERATOR_IMAGE"
  # Ideally, we would use container_scanning for the artifact here. That is currently a paid feature, so we have to use code quality
  artifacts:
    when: always
    expose_as: "Container Scan"
    paths:
      - container-scan.html

publish-image:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == 'v2'
      when: manual
      allow_failure: true
    - if: $CI_MERGE_REQUEST_ID
      when: manual
      allow_failure: true
  image:
    name: gcr.io/go-containerregistry/crane/debug:latest
    entrypoint: [ "" ]
  script:
    - mkdir -p $HOME/.docker
    - ln -snf $DOCKER_PUBLISH_AUTH_CONFIG_FILE $HOME/.docker/config.json
    - for PLATFORM in $(echo $PUBLISH_PLATFORMS | tr ',' '\n') ; do
    -   ARCH=${PLATFORM#*/}
    -   crane copy --platform $PLATFORM $OPERATOR_IMAGE $PUBLISH_REGISTRY/$ARCH/linstor-operator:$TAG
    -   crane tag $PUBLISH_REGISTRY/$ARCH/linstor-operator:$TAG v2
    - done
