stages:
  - prepare
  - build
  - build_olm
  - test
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  LINSTOR_KUBERNETES_TESTS_REPO: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.at.linbit.com/kubernetes/linstor-kubernetes-tests.git
  PROVISIONER_IMAGE: $CI_REGISTRY/kubernetes/linstor-kubernetes-tests/virter-kubeadm-playbook:latest
  TEST_SUITE_IMAGE: $CI_REGISTRY/kubernetes/linstor-kubernetes-tests/linstor-kubernetes-tests:latest
  VIRTER_VERSION: v0.5.0
  VMSHED_VERSION: v0.5.0
  YQ_VERSION: 3.4.1

prepare:
  image: python:3
  stage: prepare
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  variables:
    # git describe needs full history access
    GIT_DEPTH: 0
    # git describe does not need the submodule
    GIT_SUBMODULE_STRATEGY: none
  script:
    - SEMVER=$(hack/getsemver.py)
    - echo "SEMVER=${SEMVER}" >> .ci-build.env
    - echo "TAG=v${SEMVER/+/-}" >> .ci-build.env
  artifacts:
    reports:
      dotenv: .ci-build.env

prepare-tools:
  tags:
    - docker
    - amd64
  stage: prepare
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_BRANCH == 'master'
      when: manual
      allow_failure: true
  script:
    - docker login -u $OPERATOR_REGISTRY_USER -p $OPERATOR_REGISTRY_PASSWORD $OPERATOR_REGISTRY
    - docker build -f .gitlab/Dockerfile.operator-sdk-tools -t $OPERATOR_REGISTRY/linstor-operator-test/operator-sdk:latest .gitlab
    - docker push $OPERATOR_REGISTRY/linstor-operator-test/operator-sdk:latest

.with-tools:
  before_script:
    - mkdir -p .tools
    - |
      if [ ! -e .tools/operator-sdk ] ; then
        curl -L https://github.com/operator-framework/operator-sdk/releases/download/v0.16.0/operator-sdk-v0.16.0-x86_64-linux-gnu > .tools/operator-sdk
        chmod +x .tools/operator-sdk
      fi
    - |
      if [ ! -e .tools/helm ] ; then
        curl -L https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz | tar zx --directory=.tools/ --strip=1 linux-amd64/helm
      fi
    - |
      if [ ! -e .tools/yq ] ; then
        curl -L https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64 > .tools/yq
        chmod +x .tools/yq
      fi
    - |
      if [ ! -e .tools/jq ] ; then
        curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 > .tools/jq
        chmod +x .tools/jq
      fi
    - |
      if [ ! -e .tools/crane ] ; then
        curl -L https://github.com/google/go-containerregistry/releases/download/v0.1.3/go-containerregistry_Linux_x86_64.tar.gz | tar zx --directory=.tools/ crane
      fi
    - export PATH="$(readlink -f .tools/):$PATH"
  cache:
    paths:
      - .tools/

build_chart:
  extends: .with-tools
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  stage: build
  script:
    - make chart SEMVER=$SEMVER
    - curl --fail --user $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD --upload-file out/helm/linstor-$SEMVER.tgz $LINBIT_REGISTRY_HELM/
  tags:
    - shell

build_operator:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  stage: build
  script:
    - docker login -u $OPERATOR_REGISTRY_USER -p $OPERATOR_REGISTRY_PASSWORD $OPERATOR_REGISTRY
    - make operator REGISTRY=$OPERATOR_REGISTRY/linstor-operator-test TAG=$TAG
    - make upload REGISTRY=$OPERATOR_REGISTRY/linstor-operator-test TAG=$TAG
    - if [ "$CI_COMMIT_BRANCH" == 'master' ] ; then
    -   make upload REGISTRY=$OPERATOR_REGISTRY/linstor-operator-test TAG=latest
    - fi
  tags:
    - shell

build_olm:
  extends:
    - .with-tools
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  stage: build_olm
  script:
    - docker login -u $OPERATOR_REGISTRY_USER -p $OPERATOR_REGISTRY_PASSWORD $OPERATOR_REGISTRY
    - make olm SEMVER=$SEMVER OLM_REGISTRY=$OPERATOR_REGISTRY/linstor-operator-test
    - docker build -t $OPERATOR_REGISTRY/linstor-operator-test/linstor-operator-bundle:$TAG out/olm-bundle/$SEMVER/
    - docker push $OPERATOR_REGISTRY/linstor-operator-test/linstor-operator-bundle:$TAG
  tags:
    - docker
  artifacts:
    paths:
      - out/olm

test_olm:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  stage: test
  image: $OPERATOR_REGISTRY/linstor-operator-test/operator-sdk:latest
  script:
    - operator-courier verify out/olm/$SEMVER
    - operator-sdk bundle validate --verbose --image-builder none $OPERATOR_REGISTRY/linstor-operator-test/linstor-operator-bundle:$TAG

test:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
  stage: test
  tags:
    - libvirt
  cache:
    paths:
      - download
  before_script:
    - . .gitlab/gitlab-utils.sh
    - |
      tests_prepare_tools
      tests_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
      tests_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
      tests_fetch_binary yq yq-$YQ_VERSION https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64
    - mkdir -p tests/linstor-kubernetes-tests
    - git clone --depth=1 $LINSTOR_KUBERNETES_TESTS_REPO tests/linstor-kubernetes-tests
    - docker login -u $OPERATOR_REGISTRY_USER -p $OPERATOR_REGISTRY_PASSWORD $OPERATOR_REGISTRY
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker image pull $PROVISIONER_IMAGE
    - docker image pull $TEST_SUITE_IMAGE
    - HELM_VALUES_BASE64=$(yq write test-helm-config.yaml operator.image $OPERATOR_REGISTRY/linstor-operator-test/linstor-operator:$TAG | base64 --wrap=0 -)
    - cd tests/linstor-kubernetes-tests
    - >-
      make run
      PROVISIONER_IMAGE=$PROVISIONER_IMAGE
      TEST_SUITE_IMAGE=$TEST_SUITE_IMAGE
      VMSHED_EXTRA_ARGS="
      --set values.HelmRepo=$LINBIT_REGISTRY_HELM
      --set values.HelmChartVersion=$SEMVER
      --set values.HelmValuesBase64=$HELM_VALUES_BASE64
      "
  artifacts:
    # provide a convenient name so that the downloaded artifacts can be identified
    name: $CI_PROJECT_NAME-$CI_JOB_ID
    paths:
      - tests/linstor-kubernetes-tests/tests-out/
    when: always
    reports:
      junit: tests/linstor-kubernetes-tests/tests-out/test-results/*.xml

.push-image:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
      when: manual
      allow_failure: true
  script:
    - docker login -u $DEPLOY_REGISTRY_USER -p $DEPLOY_REGISTRY_PASSWORD $DEPLOY_REGISTRY
    - make operator ARCH=$ARCH TAG=$TAG
    - make upload ARCH=$ARCH TAG=$TAG

push-amd64:
  extends: .push-image
  variables:
    ARCH: amd64
  tags:
    - amd64
    - docker

push-s390x:
  extends: .push-image
  variables:
    ARCH: s390x
  tags:
    - s390x

publish-chart:
  stage: deploy
  extends: .with-tools
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
      when: manual
      allow_failure: true
  script:
    - eval $(ssh-agent -s)
    - trap 'ssh-agent -k' EXIT
    - cat $GITHUB_DEPLOY_KEY | ssh-add -
    - export GIT_AUTHOR_NAME="LinbitPRBot"
    - export GIT_COMMITTER_NAME="LinbitPRBot"
    - export GIT_AUTHOR_EMAIL="linbitprbot@users.noreply.github.com"
    - export GIT_COMMITTER_EMAIL="linbitprbot@users.noreply.github.com"
    - make publish SEMVER=$SEMVER UPSTREAMGIT=git@github.com:LINBIT/linstor-operator-builder.git
  tags:
    - shell

publish-csv:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
      when: manual
      allow_failure: true
  extends:
    - .with-tools
  dependencies:
    - prepare
  tags:
    - docker
  script:
    - docker login -u unused -p $SCAN_TOKEN_OPERATOR scan.connect.redhat.com
    - make upload REGISTRY=scan.connect.redhat.com/$SCAN_REGISTRY_OPERATOR_PID TAG=$TAG DOCKER_BUILD_ARGS="--pull --no-cache" PUSH_LATEST=no
    - docker logout scan.connect.redhat.com
    # TODO: we should wait on the operator image to be certified here
    # TODO: upload the olm-bundle for scanning!
